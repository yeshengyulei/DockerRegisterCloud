name: Build Client
on: [push]
jobs:
  android:
    runs-on: [ubuntu-latest]
    steps:
      - name: Check Out Code
        uses: actions/checkout@v1
      - name: Extract Signature
        run: echo ${{secrets.KEY_FILE}} | base64 -d > $HOME/.android.jks
      - name: Setup JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Setup Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: 'beta'
      - name: Build APK
        run: flutter build apk --target-platform android-arm
        env:
          KEY_PASS: ${{secrets.KEY_PASS}}
      - name: Upload APK
        uses: actions/upload-artifact@v2
        with:
          name: drc-client-android
          path: build/app/outputs/flutter-apk/app-release.apk
  desktop:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        include:
          - os: ubuntu-latest
            output-name: drc
            platfrom: linux
            packaging: linux-appimage
          - os: macOS-latest
            output-name: drc
            platfrom: darwin
            packaging: darwin-dmg
          - os: windows-latest
            output-name: drc.exe
            platfrom: windows
            packaging: windows-msi
    steps:
      - name: Check Out Code
        uses: actions/checkout@v2
      - name: Setup Flutter
        uses: subosito/flutter-action@v1
      - run: sudo apt-get install libgl1-mesa-dev xorg-dev
        if: matrix.os == 'ubuntu-latest'
      - run: sudo wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage -O /usr/local/bin/appimagetool && sudo chmod +x /usr/local/bin/appimagetool
        if: matrix.os == 'ubuntu-latest'
      - run: echo "C:\Program Files (x86)\WiX Toolset v3.11\bin" >> $env:GITHUB_PATH
        if: matrix.os == 'windows-latest'
      - run: mkdir build
      - run: flutter pub get
      - run: dart compile exe bin/drc.dart -v -o build/${{ matrix.output-name }}
      - uses: actions/setup-go@v2
      - name: Install Go-Flutter Hover
        run: GO111MODULE=on go get -u -a github.com/go-flutter-desktop/hover
        shell: bash
      - run: flutter channel beta
      - run: flutter upgrade
      - run: $(go env GOPATH)/bin/hover build ${{ matrix.packaging }}
        shell: bash
        continue-on-error: true
      - name: Upload Command Tools
        uses: actions/upload-artifact@v2
        with:
          name: drc-cli-${{ matrix.platfrom }}
          path: build/${{ matrix.output-name }}
        continue-on-error: true
      - name: Upload Client
        uses: actions/upload-artifact@v2
        with:
          name: drc-client-${{ matrix.platfrom }}
          path: go/build/outputs/${{ matrix.packaging }}-release
        continue-on-error: true